package unii.draft.mtg.parings.database.model;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import unii.draft.mtg.parings.database.model.Player;
import unii.draft.mtg.parings.database.model.Draft;
import unii.draft.mtg.parings.database.model.PlayerDraftJoinTable;

import unii.draft.mtg.parings.database.model.PlayerDao;
import unii.draft.mtg.parings.database.model.DraftDao;
import unii.draft.mtg.parings.database.model.PlayerDraftJoinTableDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig playerDaoConfig;
    private final DaoConfig draftDaoConfig;
    private final DaoConfig playerDraftJoinTableDaoConfig;

    private final PlayerDao playerDao;
    private final DraftDao draftDao;
    private final PlayerDraftJoinTableDao playerDraftJoinTableDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        playerDaoConfig = daoConfigMap.get(PlayerDao.class).clone();
        playerDaoConfig.initIdentityScope(type);

        draftDaoConfig = daoConfigMap.get(DraftDao.class).clone();
        draftDaoConfig.initIdentityScope(type);

        playerDraftJoinTableDaoConfig = daoConfigMap.get(PlayerDraftJoinTableDao.class).clone();
        playerDraftJoinTableDaoConfig.initIdentityScope(type);

        playerDao = new PlayerDao(playerDaoConfig, this);
        draftDao = new DraftDao(draftDaoConfig, this);
        playerDraftJoinTableDao = new PlayerDraftJoinTableDao(playerDraftJoinTableDaoConfig, this);

        registerDao(Player.class, playerDao);
        registerDao(Draft.class, draftDao);
        registerDao(PlayerDraftJoinTable.class, playerDraftJoinTableDao);
    }
    
    public void clear() {
        playerDaoConfig.getIdentityScope().clear();
        draftDaoConfig.getIdentityScope().clear();
        playerDraftJoinTableDaoConfig.getIdentityScope().clear();
    }

    public PlayerDao getPlayerDao() {
        return playerDao;
    }

    public DraftDao getDraftDao() {
        return draftDao;
    }

    public PlayerDraftJoinTableDao getPlayerDraftJoinTableDao() {
        return playerDraftJoinTableDao;
    }

}
